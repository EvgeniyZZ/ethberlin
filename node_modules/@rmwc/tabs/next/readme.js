var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import React from 'react';
import { Docs, DocsExample, DocProps, DocsSubtitle, DocsP } from '@doc-utils';
import propsSrc from './generated-props.json';
import examples from './generated-examples.json';
import { TabBar, Tab } from '.';
export default function () {
    return (React.createElement(Docs, { title: "Tabs", lead: "Tabs make it easy to explore and switch between different views.", module: "@rmwc/tabs", styles: [
            '@material/tab-bar/dist/mdc.tab-bar.css',
            '@material/tab/dist/mdc.tab.css',
            '@material/tab-scroller/dist/mdc.tab-scroller.css',
            '@material/tab-indicator/dist/mdc.tab-indicator.css'
        ], docsLink: "https://material.io/develop/web/components/tabs/tab-bar/", examples: examples },
        React.createElement(DocsSubtitle, null, "Basic Usage"),
        React.createElement(DocsP, null, "Tabs can be either controlled or uncontrolled just like inputs. Use the `activeTabIndex` and `onActivate` callback for controlled components."),
        React.createElement(DocsExample, { label: "Uncontrolled" },
            React.createElement(TabBar, null,
                React.createElement(Tab, null, "Cookies"),
                React.createElement(Tab, null, "Pizza"),
                React.createElement(Tab, null, "Icecream"))),
        React.createElement(DocsExample, { label: "Controlled" }, function Example() {
            var _a = __read(React.useState(0), 2), activeTab = _a[0], setActiveTab = _a[1];
            return (React.createElement(TabBar, { activeTabIndex: activeTab, onActivate: function (evt) { return setActiveTab(evt.detail.index); } },
                React.createElement(Tab, null, "Cookies"),
                React.createElement(Tab, null, "Pizza"),
                React.createElement(Tab, null, "Icecream")));
        }),
        React.createElement(DocsSubtitle, null, "Variants"),
        React.createElement(DocsExample, { label: "Basic" },
            React.createElement(TabBar, null,
                React.createElement(Tab, null, "Cookies"),
                React.createElement(Tab, null, "Pizza"),
                React.createElement(Tab, null, "Icecream"))),
        React.createElement(DocsExample, { label: "With Icons" },
            React.createElement(TabBar, null,
                React.createElement(Tab, { icon: "star_border", label: "Cookies" }),
                React.createElement(Tab, { icon: "favorite_border", label: "Pizza" }),
                React.createElement(Tab, { icon: "mood", label: "Icecream" }))),
        React.createElement(DocsExample, { label: "Icons Only" },
            React.createElement(TabBar, null,
                React.createElement(Tab, { icon: "star_border" }),
                React.createElement(Tab, { icon: "favorite_border" }),
                React.createElement(Tab, { icon: "mood" }))),
        React.createElement(DocsExample, { label: "Stacked" },
            React.createElement(TabBar, null,
                React.createElement(Tab, { stacked: true, icon: "star_border", label: "Cookies" }),
                React.createElement(Tab, { stacked: true, icon: "favorite_border", label: "Pizza" }),
                React.createElement(Tab, { stacked: true, icon: "mood", label: "Icecream" }))),
        React.createElement(DocsExample, { label: "Restricted Indicator" },
            React.createElement(TabBar, null,
                React.createElement(Tab, { stacked: true, restrictIndicator: true, icon: "star_border", label: "Cookies" }),
                React.createElement(Tab, { stacked: true, restrictIndicator: true, icon: "favorite_border", label: "Pizza" }),
                React.createElement(Tab, { stacked: true, restrictIndicator: true, icon: "mood", label: "Icecream" }))),
        React.createElement(DocsExample, { label: "Scrollable" },
            React.createElement(TabBar, null,
                React.createElement(Tab, null, "Cookies"),
                React.createElement(Tab, null, "Pizza"),
                React.createElement(Tab, null, "Icecream"),
                React.createElement(Tab, null, "Chocolate"),
                React.createElement(Tab, null, "Fishsticks"),
                React.createElement(Tab, null, "Ratatouille"),
                React.createElement(Tab, null, "Bread"),
                React.createElement(Tab, null, "Rolls"),
                React.createElement(Tab, null, "Sushi"),
                React.createElement(Tab, null, "Cupcake"),
                React.createElement(Tab, null, "Cheesecake"))),
        React.createElement(DocProps, { src: propsSrc, components: [TabBar, Tab] })));
}
export var galleryExample = (React.createElement("div", { style: { margin: '1rem' } },
    React.createElement(TabBar, null,
        React.createElement(Tab, null, "One"),
        React.createElement(Tab, null, "Two"),
        React.createElement(Tab, null, "Three"))));
