{"ast":null,"code":"var _jsxFileName = \"/home/skale/ethberlin/dApp/ethberlin/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'material-components-web/dist/material-components-web.min.css';\nimport '@material/button/dist/mdc.button.css';\nimport { Button } from '@rmwc/button';\nimport { TextField } from '@rmwc/textfield';\nimport Web3 from 'web3';\nimport InputField from './inputField.js';\n\nconst Filestorage = require('@skalenetwork/filestorage.js/src/index');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addressFrom: '',\n      addressTo: '',\n      uploadedImage: ''\n    };\n    this.updateAddressFrom = this.updateAddressFrom.bind(this);\n    this.updateAddressTo = this.updateAddressTo.bind(this);\n    this.upload = this.upload.bind(this);\n  }\n\n  updateAddressFrom(address) {\n    this.setState({\n      'addressFrom': address\n    });\n  }\n\n  updateAddressTo(address) {\n    this.setState({\n      'addressTo': address\n    });\n  }\n\n  async upload(event) {\n    event.preventDefault(); //create web3 connection\n\n    const web3Provider = new Web3.providers.HttpProvider(\"http://ethberlin02.skalelabs.com:10145\");\n    let web3 = new Web3(web3Provider); //get filestorage instance\n\n    let filestorage = new Filestorage(web3, true); //provide your account & private key\n    //note this must include the 0x prefix\n\n    let privateKey = '0x' + '[YOUR_PRIVATE_KEY]';\n    let account = \"[YOUR_ACCOUNT_ADDRESS]\"; //get file data from file upload input field\n\n    let file = document.getElementById('files').files[0];\n    let reader = new FileReader(); //file storage method to upload file\n\n    let self = this;\n\n    reader.onload = async function (e) {\n      console.log(reader.result);\n      const arrayBuffer = reader.result;\n      self.setState({\n        uploadedImage: \"data:image/png;base64,\" + arrayBuffer\n      }); //        const bytes = new Uint8Array(arrayBuffer);\n      //        let link = filestorage.uploadFile(\n      //          account,\n      //          file.name,\n      //          bytes,\n      //          pivateKey\n      //        );\n    };\n\n    reader.readAsArrayBuffer(file);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      address: this.state.addressFrom,\n      updateAddress: this.updateAddressFrom,\n      placeholder: \"Enter address from\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      address: this.state.addressTo,\n      updateAddress: this.updateAddressTo,\n      placeholder: \"Enter address to\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => this.upload(e),\n      type: \"file\",\n      id: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Send\",\n      raised: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"addressFrom: \", this.state.addressFrom), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"addressTo: \", this.state.addressTo), React.createElement(\"img\", {\n      id: \"ItemPreview\",\n      src: this.state.uploadedImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/skale/ethberlin/dApp/ethberlin/src/App.js"],"names":["React","Button","TextField","Web3","InputField","Filestorage","require","App","Component","constructor","props","state","addressFrom","addressTo","uploadedImage","updateAddressFrom","bind","updateAddressTo","upload","address","setState","event","preventDefault","web3Provider","providers","HttpProvider","web3","filestorage","privateKey","account","file","document","getElementById","files","reader","FileReader","self","onload","e","console","log","result","arrayBuffer","readAsArrayBuffer","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'material-components-web/dist/material-components-web.min.css';\nimport '@material/button/dist/mdc.button.css';\n\nimport { Button } from '@rmwc/button';\nimport { TextField } from '@rmwc/textfield';\nimport Web3 from 'web3';\n\nimport InputField from './inputField.js';\n\nconst Filestorage = require('@skalenetwork/filestorage.js/src/index');\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        addressFrom: '',\n        addressTo: '',\n        uploadedImage: ''\n    }\n    this.updateAddressFrom = this.updateAddressFrom.bind(this);\n    this.updateAddressTo = this.updateAddressTo.bind(this);\n    this.upload = this.upload.bind(this);\n\n  };\n\n\n   updateAddressFrom(address){\n    this.setState({'addressFrom': address});\n   }\n\n\n   updateAddressTo(address){\n    this.setState({'addressTo': address});\n   }\n\n\n   async upload(event){\n      event.preventDefault();\n      //create web3 connection\n      const web3Provider = new Web3.providers.HttpProvider(\n        \"http://ethberlin02.skalelabs.com:10145\"\n      );\n      let web3 = new Web3(web3Provider);\n\n      //get filestorage instance\n      let filestorage = new Filestorage(web3, true);\n\n      //provide your account & private key\n      //note this must include the 0x prefix\n      let privateKey = '0x' + '[YOUR_PRIVATE_KEY]';\n      let account = \"[YOUR_ACCOUNT_ADDRESS]\";\n\n      //get file data from file upload input field\n      let file = document.getElementById('files').files[0];\n      let reader = new FileReader();\n\n      //file storage method to upload file\n      let self = this;\n      reader.onload = async function(e) {\n\n        console.log(reader.result);\n\n        const arrayBuffer = reader.result;\n\n        self.setState({uploadedImage:  \"data:image/png;base64,\"+arrayBuffer})\n//        const bytes = new Uint8Array(arrayBuffer);\n//        let link = filestorage.uploadFile(\n//          account,\n//          file.name,\n//          bytes,\n//          pivateKey\n//        );\n      };\n      reader.readAsArrayBuffer(file);\n    }\n\n\n\n  render(){\n\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n\n            <InputField address={this.state.addressFrom} updateAddress={this.updateAddressFrom} placeholder='Enter address from' />\n            <InputField address={this.state.addressTo} updateAddress={this.updateAddressTo}  placeholder='Enter address to'  />\n\n\n            <input onChange={(e) => this.upload(e)}\n                type=\"file\" id=\"files\" / >\n\n\n            <Button label=\"Send\" raised />\n\n            <p>\n                addressFrom: {this.state.addressFrom}\n            </p>\n\n\n            <p>\n                addressTo: {this.state.addressTo}\n            </p>\n\n\n            <img id=\"ItemPreview\" src={this.state.uploadedImage} />\n\n\n          </header>\n        </div>\n      );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}